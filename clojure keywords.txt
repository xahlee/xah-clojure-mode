
    172:  Contents:  <a href="clojure.core-api.html#clojure.core/&amp;" id="var-tag">&amp;</a>
<a href="clojure.core-api.html#clojure.core/*" id="var-tag">*</a>
<a href="clojure.core-api.html#clojure.core/*'" id="var-tag">*'</a>
<a href="clojure.core-api.html#clojure.core/*1" id="var-tag">*1</a>
<a href="clojure.core-api.html#clojure.core/*2" id="var-tag">*2</a>
<a href="clojure.core-api.html#clojure.core/*3" id="var-tag">*3</a>
<a href="clojure.core-api.html#clojure.core/*agent*" id="var-tag">*agent*</a>
<a href="clojure.core-api.html#clojure.core/*clojure-version*" id="var-tag">*clojure-version*</a>
<a href="clojure.core-api.html#clojure.core/*command-line-args*" id="var-tag">*command-line-args*</a>
<a href="clojure.core-api.html#clojure.core/*compile-files*" id="var-tag">*compile-files*</a>
<a href="clojure.core-api.html#clojure.core/*compile-path*" id="var-tag">*compile-path*</a>
<a href="clojure.core-api.html#clojure.core/*compiler-options*" id="var-tag">*compiler-options*</a>
<a href="clojure.core-api.html#clojure.core/*data-readers*" id="var-tag">*data-readers*</a>
<a href="clojure.core-api.html#clojure.core/*default-data-reader-fn*" id="var-tag">*default-data-reader-fn*</a>
<a href="clojure.core-api.html#clojure.core/*e" id="var-tag">*e</a>
<a href="clojure.core-api.html#clojure.core/*err*" id="var-tag">*err*</a>
<a href="clojure.core-api.html#clojure.core/*file*" id="var-tag">*file*</a>
<a href="clojure.core-api.html#clojure.core/*flush-on-newline*" id="var-tag">*flush-on-newline*</a>
<a href="clojure.core-api.html#clojure.core/*in*" id="var-tag">*in*</a>
<a href="clojure.core-api.html#clojure.core/*ns*" id="var-tag">*ns*</a>
<a href="clojure.core-api.html#clojure.core/*out*" id="var-tag">*out*</a>
<a href="clojure.core-api.html#clojure.core/*print-dup*" id="var-tag">*print-dup*</a>
<a href="clojure.core-api.html#clojure.core/*print-length*" id="var-tag">*print-length*</a>
<a href="clojure.core-api.html#clojure.core/*print-level*" id="var-tag">*print-level*</a>
<a href="clojure.core-api.html#clojure.core/*print-meta*" id="var-tag">*print-meta*</a>
<a href="clojure.core-api.html#clojure.core/*print-readably*" id="var-tag">*print-readably*</a>
<a href="clojure.core-api.html#clojure.core/*read-eval*" id="var-tag">*read-eval*</a>
<a href="clojure.core-api.html#clojure.core/*unchecked-math*" id="var-tag">*unchecked-math*</a>
<a href="clojure.core-api.html#clojure.core/*warn-on-reflection*" id="var-tag">*warn-on-reflection*</a>
<a href="clojure.core-api.html#clojure.core/+" id="var-tag">+</a>
<a href="clojure.core-api.html#clojure.core/+'" id="var-tag">+'</a>
<a href="clojure.core-api.html#clojure.core/-" id="var-tag">-</a>
<a href="clojure.core-api.html#clojure.core/-'" id="var-tag">-'</a>
<a href="clojure.core-api.html#clojure.core/-&gt;" id="var-tag">-&gt;</a>
<a href="clojure.core-api.html#clojure.core/-&gt;&gt;" id="var-tag">-&gt;&gt;</a>
<a href="clojure.core-api.html#clojure.core/-&gt;ArrayChunk" id="var-tag">-&gt;ArrayChunk</a>
<a href="clojure.core-api.html#clojure.core/-&gt;Vec" id="var-tag">-&gt;Vec</a>
<a href="clojure.core-api.html#clojure.core/-&gt;VecNode" id="var-tag">-&gt;VecNode</a>
<a href="clojure.core-api.html#clojure.core/-&gt;VecSeq" id="var-tag">-&gt;VecSeq</a>
<a href="clojure.core-api.html#clojure.core/." id="var-tag">.</a>
<a href="clojure.core-api.html#clojure.core/.." id="var-tag">..</a>
<a href="clojure.core-api.html#clojure.core//" id="var-tag">/</a>
<a href="clojure.core-api.html#clojure.core/&lt;" id="var-tag">&lt;</a>
<a href="clojure.core-api.html#clojure.core/&lt;=" id="var-tag">&lt;=</a>
<a href="clojure.core-api.html#clojure.core/=" id="var-tag">=</a>
<a href="clojure.core-api.html#clojure.core/==" id="var-tag">==</a>
<a href="clojure.core-api.html#clojure.core/&gt;" id="var-tag">&gt;</a>
<a href="clojure.core-api.html#clojure.core/&gt;=" id="var-tag">&gt;=</a>
<a href="clojure.core-api.html#clojure.core/accessor" id="var-tag">accessor</a>
<a href="clojure.core-api.html#clojure.core/aclone" id="var-tag">aclone</a>
<a href="clojure.core-api.html#clojure.core/add-classpath" id="var-tag">add-classpath</a>
<a href="clojure.core-api.html#clojure.core/add-watch" id="var-tag">add-watch</a>
<a href="clojure.core-api.html#clojure.core/agent" id="var-tag">agent</a>
<a href="clojure.core-api.html#clojure.core/agent-error" id="var-tag">agent-error</a>
<a href="clojure.core-api.html#clojure.core/agent-errors" id="var-tag">agent-errors</a>
<a href="clojure.core-api.html#clojure.core/aget" id="var-tag">aget</a>
<a href="clojure.core-api.html#clojure.core/alength" id="var-tag">alength</a>
<a href="clojure.core-api.html#clojure.core/alias" id="var-tag">alias</a>
<a href="clojure.core-api.html#clojure.core/all-ns" id="var-tag">all-ns</a>
<a href="clojure.core-api.html#clojure.core/alter" id="var-tag">alter</a>
<a href="clojure.core-api.html#clojure.core/alter-meta!" id="var-tag">alter-meta!</a>
<a href="clojure.core-api.html#clojure.core/alter-var-root" id="var-tag">alter-var-root</a>
<a href="clojure.core-api.html#clojure.core/amap" id="var-tag">amap</a>
<a href="clojure.core-api.html#clojure.core/ancestors" id="var-tag">ancestors</a>
<a href="clojure.core-api.html#clojure.core/and" id="var-tag">and</a>
<a href="clojure.core-api.html#clojure.core/apply" id="var-tag">apply</a>
<a href="clojure.core-api.html#clojure.core/areduce" id="var-tag">areduce</a>
<a href="clojure.core-api.html#clojure.core/array-map" id="var-tag">array-map</a>
<a href="clojure.core-api.html#clojure.core/ArrayChunk" id="var-tag">ArrayChunk</a>
<a href="clojure.core-api.html#clojure.core/as-&gt;" id="var-tag">as-&gt;</a>
<a href="clojure.core-api.html#clojure.core/aset" id="var-tag">aset</a>
<a href="clojure.core-api.html#clojure.core/aset-boolean" id="var-tag">aset-boolean</a>
<a href="clojure.core-api.html#clojure.core/aset-byte" id="var-tag">aset-byte</a>
<a href="clojure.core-api.html#clojure.core/aset-char" id="var-tag">aset-char</a>
<a href="clojure.core-api.html#clojure.core/aset-double" id="var-tag">aset-double</a>
<a href="clojure.core-api.html#clojure.core/aset-float" id="var-tag">aset-float</a>
<a href="clojure.core-api.html#clojure.core/aset-int" id="var-tag">aset-int</a>
<a href="clojure.core-api.html#clojure.core/aset-long" id="var-tag">aset-long</a>
<a href="clojure.core-api.html#clojure.core/aset-short" id="var-tag">aset-short</a>
<a href="clojure.core-api.html#clojure.core/assert" id="var-tag">assert</a>
<a href="clojure.core-api.html#clojure.core/assoc" id="var-tag">assoc</a>
<a href="clojure.core-api.html#clojure.core/assoc!" id="var-tag">assoc!</a>
<a href="clojure.core-api.html#clojure.core/assoc-in" id="var-tag">assoc-in</a>
<a href="clojure.core-api.html#clojure.core/associative?" id="var-tag">associative?</a>
<a href="clojure.core-api.html#clojure.core/atom" id="var-tag">atom</a>
<a href="clojure.core-api.html#clojure.core/await" id="var-tag">await</a>
<a href="clojure.core-api.html#clojure.core/await-for" id="var-tag">await-for</a>
<a href="clojure.core-api.html#clojure.core/bases" id="var-tag">bases</a>
<a href="clojure.core-api.html#clojure.core/bean" id="var-tag">bean</a>
<a href="clojure.core-api.html#clojure.core/bigdec" id="var-tag">bigdec</a>
<a href="clojure.core-api.html#clojure.core/bigint" id="var-tag">bigint</a>
<a href="clojure.core-api.html#clojure.core/biginteger" id="var-tag">biginteger</a>
<a href="clojure.core-api.html#clojure.core/binding" id="var-tag">binding</a>
<a href="clojure.core-api.html#clojure.core/bit-and" id="var-tag">bit-and</a>
<a href="clojure.core-api.html#clojure.core/bit-and-not" id="var-tag">bit-and-not</a>
<a href="clojure.core-api.html#clojure.core/bit-clear" id="var-tag">bit-clear</a>
<a href="clojure.core-api.html#clojure.core/bit-flip" id="var-tag">bit-flip</a>
<a href="clojure.core-api.html#clojure.core/bit-not" id="var-tag">bit-not</a>
<a href="clojure.core-api.html#clojure.core/bit-or" id="var-tag">bit-or</a>
<a href="clojure.core-api.html#clojure.core/bit-set" id="var-tag">bit-set</a>
<a href="clojure.core-api.html#clojure.core/bit-shift-left" id="var-tag">bit-shift-left</a>
<a href="clojure.core-api.html#clojure.core/bit-shift-right" id="var-tag">bit-shift-right</a>
<a href="clojure.core-api.html#clojure.core/bit-test" id="var-tag">bit-test</a>
<a href="clojure.core-api.html#clojure.core/bit-xor" id="var-tag">bit-xor</a>
<a href="clojure.core-api.html#clojure.core/boolean" id="var-tag">boolean</a>
<a href="clojure.core-api.html#clojure.core/boolean-array" id="var-tag">boolean-array</a>
<a href="clojure.core-api.html#clojure.core/booleans" id="var-tag">booleans</a>
<a href="clojure.core-api.html#clojure.core/bound-fn" id="var-tag">bound-fn</a>
<a href="clojure.core-api.html#clojure.core/bound-fn*" id="var-tag">bound-fn*</a>
<a href="clojure.core-api.html#clojure.core/bound?" id="var-tag">bound?</a>
<a href="clojure.core-api.html#clojure.core/butlast" id="var-tag">butlast</a>
<a href="clojure.core-api.html#clojure.core/byte" id="var-tag">byte</a>
<a href="clojure.core-api.html#clojure.core/byte-array" id="var-tag">byte-array</a>
<a href="clojure.core-api.html#clojure.core/bytes" id="var-tag">bytes</a>
<a href="clojure.core-api.html#clojure.core/case" id="var-tag">case</a>
<a href="clojure.core-api.html#clojure.core/cast" id="var-tag">cast</a>
<a href="clojure.core-api.html#clojure.core/catch" id="var-tag">catch</a>
<a href="clojure.core-api.html#clojure.core/char" id="var-tag">char</a>
<a href="clojure.core-api.html#clojure.core/char-array" id="var-tag">char-array</a>
<a href="clojure.core-api.html#clojure.core/char-escape-string" id="var-tag">char-escape-string</a>
<a href="clojure.core-api.html#clojure.core/char-name-string" id="var-tag">char-name-string</a>
<a href="clojure.core-api.html#clojure.core/char?" id="var-tag">char?</a>
<a href="clojure.core-api.html#clojure.core/chars" id="var-tag">chars</a>
<a href="clojure.core-api.html#clojure.core/class" id="var-tag">class</a>
<a href="clojure.core-api.html#clojure.core/class?" id="var-tag">class?</a>
<a href="clojure.core-api.html#clojure.core/clear-agent-errors" id="var-tag">clear-agent-errors</a>
<a href="clojure.core-api.html#clojure.core/clojure-version" id="var-tag">clojure-version</a>
<a href="clojure.core-api.html#clojure.core/coll?" id="var-tag">coll?</a>
<a href="clojure.core-api.html#clojure.core/comment" id="var-tag">comment</a>
<a href="clojure.core-api.html#clojure.core/commute" id="var-tag">commute</a>
<a href="clojure.core-api.html#clojure.core/comp" id="var-tag">comp</a>
<a href="clojure.core-api.html#clojure.core/comparator" id="var-tag">comparator</a>
<a href="clojure.core-api.html#clojure.core/compare" id="var-tag">compare</a>
<a href="clojure.core-api.html#clojure.core/compare-and-set!" id="var-tag">compare-and-set!</a>
<a href="clojure.core-api.html#clojure.core/compile" id="var-tag">compile</a>
<a href="clojure.core-api.html#clojure.core/complement" id="var-tag">complement</a>
<a href="clojure.core-api.html#clojure.core/concat" id="var-tag">concat</a>
<a href="clojure.core-api.html#clojure.core/cond" id="var-tag">cond</a>
<a href="clojure.core-api.html#clojure.core/cond-&gt;" id="var-tag">cond-&gt;</a>
<a href="clojure.core-api.html#clojure.core/cond-&gt;&gt;" id="var-tag">cond-&gt;&gt;</a>
<a href="clojure.core-api.html#clojure.core/condp" id="var-tag">condp</a>
<a href="clojure.core-api.html#clojure.core/conj" id="var-tag">conj</a>
<a href="clojure.core-api.html#clojure.core/conj!" id="var-tag">conj!</a>
<a href="clojure.core-api.html#clojure.core/cons" id="var-tag">cons</a>
<a href="clojure.core-api.html#clojure.core/constantly" id="var-tag">constantly</a>
<a href="clojure.core-api.html#clojure.core/construct-proxy" id="var-tag">construct-proxy</a>
<a href="clojure.core-api.html#clojure.core/contains?" id="var-tag">contains?</a>
<a href="clojure.core-api.html#clojure.core/count" id="var-tag">count</a>
<a href="clojure.core-api.html#clojure.core/counted?" id="var-tag">counted?</a>
<a href="clojure.core-api.html#clojure.core/create-ns" id="var-tag">create-ns</a>
<a href="clojure.core-api.html#clojure.core/create-struct" id="var-tag">create-struct</a>
<a href="clojure.core-api.html#clojure.core/cycle" id="var-tag">cycle</a>
<a href="clojure.core-api.html#clojure.core/dec" id="var-tag">dec</a>
<a href="clojure.core-api.html#clojure.core/dec'" id="var-tag">dec'</a>
<a href="clojure.core-api.html#clojure.core/decimal?" id="var-tag">decimal?</a>
<a href="clojure.core-api.html#clojure.core/declare" id="var-tag">declare</a>
<a href="clojure.core-api.html#clojure.core/def" id="var-tag">def</a>
<a href="clojure.core-api.html#clojure.core/default-data-readers" id="var-tag">default-data-readers</a>
<a href="clojure.core-api.html#clojure.core/definline" id="var-tag">definline</a>
<a href="clojure.core-api.html#clojure.core/definterface" id="var-tag">definterface</a>
<a href="clojure.core-api.html#clojure.core/defmacro" id="var-tag">defmacro</a>
<a href="clojure.core-api.html#clojure.core/defmethod" id="var-tag">defmethod</a>
<a href="clojure.core-api.html#clojure.core/defmulti" id="var-tag">defmulti</a>
<a href="clojure.core-api.html#clojure.core/defn" id="var-tag">defn</a>
<a href="clojure.core-api.html#clojure.core/defn-" id="var-tag">defn-</a>
<a href="clojure.core-api.html#clojure.core/defonce" id="var-tag">defonce</a>
<a href="clojure.core-api.html#clojure.core/defprotocol" id="var-tag">defprotocol</a>
<a href="clojure.core-api.html#clojure.core/defrecord" id="var-tag">defrecord</a>
<a href="clojure.core-api.html#clojure.core/defstruct" id="var-tag">defstruct</a>
<a href="clojure.core-api.html#clojure.core/deftype" id="var-tag">deftype</a>
<a href="clojure.core-api.html#clojure.core/delay" id="var-tag">delay</a>
<a href="clojure.core-api.html#clojure.core/delay?" id="var-tag">delay?</a>
<a href="clojure.core-api.html#clojure.core/deliver" id="var-tag">deliver</a>
<a href="clojure.core-api.html#clojure.core/denominator" id="var-tag">denominator</a>
<a href="clojure.core-api.html#clojure.core/deref" id="var-tag">deref</a>
<a href="clojure.core-api.html#clojure.core/derive" id="var-tag">derive</a>
<a href="clojure.core-api.html#clojure.core/descendants" id="var-tag">descendants</a>
<a href="clojure.core-api.html#clojure.core/disj" id="var-tag">disj</a>
<a href="clojure.core-api.html#clojure.core/disj!" id="var-tag">disj!</a>
<a href="clojure.core-api.html#clojure.core/dissoc" id="var-tag">dissoc</a>
<a href="clojure.core-api.html#clojure.core/dissoc!" id="var-tag">dissoc!</a>
<a href="clojure.core-api.html#clojure.core/distinct" id="var-tag">distinct</a>
<a href="clojure.core-api.html#clojure.core/distinct?" id="var-tag">distinct?</a>
<a href="clojure.core-api.html#clojure.core/do" id="var-tag">do</a>
<a href="clojure.core-api.html#clojure.core/doall" id="var-tag">doall</a>
<a href="clojure.core-api.html#clojure.core/dorun" id="var-tag">dorun</a>
<a href="clojure.core-api.html#clojure.core/doseq" id="var-tag">doseq</a>
<a href="clojure.core-api.html#clojure.core/dosync" id="var-tag">dosync</a>
<a href="clojure.core-api.html#clojure.core/dotimes" id="var-tag">dotimes</a>
<a href="clojure.core-api.html#clojure.core/doto" id="var-tag">doto</a>
<a href="clojure.core-api.html#clojure.core/double" id="var-tag">double</a>
<a href="clojure.core-api.html#clojure.core/double-array" id="var-tag">double-array</a>
<a href="clojure.core-api.html#clojure.core/doubles" id="var-tag">doubles</a>
<a href="clojure.core-api.html#clojure.core/drop" id="var-tag">drop</a>
<a href="clojure.core-api.html#clojure.core/drop-last" id="var-tag">drop-last</a>
<a href="clojure.core-api.html#clojure.core/drop-while" id="var-tag">drop-while</a>
<a href="clojure.core-api.html#clojure.core/empty" id="var-tag">empty</a>
<a href="clojure.core-api.html#clojure.core/empty?" id="var-tag">empty?</a>
<a href="clojure.core-api.html#clojure.core/ensure" id="var-tag">ensure</a>
<a href="clojure.core-api.html#clojure.core/enumeration-seq" id="var-tag">enumeration-seq</a>
<a href="clojure.core-api.html#clojure.core/error-handler" id="var-tag">error-handler</a>
<a href="clojure.core-api.html#clojure.core/error-mode" id="var-tag">error-mode</a>
<a href="clojure.core-api.html#clojure.core/eval" id="var-tag">eval</a>
<a href="clojure.core-api.html#clojure.core/even?" id="var-tag">even?</a>
<a href="clojure.core-api.html#clojure.core/every-pred" id="var-tag">every-pred</a>
<a href="clojure.core-api.html#clojure.core/every?" id="var-tag">every?</a>
<a href="clojure.core-api.html#clojure.core/ex-data" id="var-tag">ex-data</a>
<a href="clojure.core-api.html#clojure.core/ex-info" id="var-tag">ex-info</a>
<a href="clojure.core-api.html#clojure.core/extend" id="var-tag">extend</a>
<a href="clojure.core-api.html#clojure.core/extend-protocol" id="var-tag">extend-protocol</a>
<a href="clojure.core-api.html#clojure.core/extend-type" id="var-tag">extend-type</a>
<a href="clojure.core-api.html#clojure.core/extenders" id="var-tag">extenders</a>
<a href="clojure.core-api.html#clojure.core/extends?" id="var-tag">extends?</a>
<a href="clojure.core-api.html#clojure.core/false?" id="var-tag">false?</a>
<a href="clojure.core-api.html#clojure.core/ffirst" id="var-tag">ffirst</a>
<a href="clojure.core-api.html#clojure.core/file-seq" id="var-tag">file-seq</a>
<a href="clojure.core-api.html#clojure.core/filter" id="var-tag">filter</a>
<a href="clojure.core-api.html#clojure.core/filterv" id="var-tag">filterv</a>
<a href="clojure.core-api.html#clojure.core/finally" id="var-tag">finally</a>
<a href="clojure.core-api.html#clojure.core/find" id="var-tag">find</a>
<a href="clojure.core-api.html#clojure.core/find-keyword" id="var-tag">find-keyword</a>
<a href="clojure.core-api.html#clojure.core/find-ns" id="var-tag">find-ns</a>
<a href="clojure.core-api.html#clojure.core/find-var" id="var-tag">find-var</a>
<a href="clojure.core-api.html#clojure.core/first" id="var-tag">first</a>
<a href="clojure.core-api.html#clojure.core/flatten" id="var-tag">flatten</a>
<a href="clojure.core-api.html#clojure.core/float" id="var-tag">float</a>
<a href="clojure.core-api.html#clojure.core/float-array" id="var-tag">float-array</a>
<a href="clojure.core-api.html#clojure.core/float?" id="var-tag">float?</a>
<a href="clojure.core-api.html#clojure.core/floats" id="var-tag">floats</a>
<a href="clojure.core-api.html#clojure.core/flush" id="var-tag">flush</a>
<a href="clojure.core-api.html#clojure.core/fn" id="var-tag">fn</a>
<a href="clojure.core-api.html#clojure.core/fn?" id="var-tag">fn?</a>
<a href="clojure.core-api.html#clojure.core/fnext" id="var-tag">fnext</a>
<a href="clojure.core-api.html#clojure.core/fnil" id="var-tag">fnil</a>
<a href="clojure.core-api.html#clojure.core/for" id="var-tag">for</a>
<a href="clojure.core-api.html#clojure.core/force" id="var-tag">force</a>
<a href="clojure.core-api.html#clojure.core/format" id="var-tag">format</a>
<a href="clojure.core-api.html#clojure.core/frequencies" id="var-tag">frequencies</a>
<a href="clojure.core-api.html#clojure.core/future" id="var-tag">future</a>
<a href="clojure.core-api.html#clojure.core/future-call" id="var-tag">future-call</a>
<a href="clojure.core-api.html#clojure.core/future-cancel" id="var-tag">future-cancel</a>
<a href="clojure.core-api.html#clojure.core/future-cancelled?" id="var-tag">future-cancelled?</a>
<a href="clojure.core-api.html#clojure.core/future-done?" id="var-tag">future-done?</a>
<a href="clojure.core-api.html#clojure.core/future?" id="var-tag">future?</a>
<a href="clojure.core-api.html#clojure.core/gen-class" id="var-tag">gen-class</a>
<a href="clojure.core-api.html#clojure.core/gen-interface" id="var-tag">gen-interface</a>
<a href="clojure.core-api.html#clojure.core/gensym" id="var-tag">gensym</a>
<a href="clojure.core-api.html#clojure.core/get" id="var-tag">get</a>
<a href="clojure.core-api.html#clojure.core/get-in" id="var-tag">get-in</a>
<a href="clojure.core-api.html#clojure.core/get-method" id="var-tag">get-method</a>
<a href="clojure.core-api.html#clojure.core/get-proxy-class" id="var-tag">get-proxy-class</a>
<a href="clojure.core-api.html#clojure.core/get-thread-bindings" id="var-tag">get-thread-bindings</a>
<a href="clojure.core-api.html#clojure.core/get-validator" id="var-tag">get-validator</a>
<a href="clojure.core-api.html#clojure.core/group-by" id="var-tag">group-by</a>
<a href="clojure.core-api.html#clojure.core/hash" id="var-tag">hash</a>
<a href="clojure.core-api.html#clojure.core/hash-map" id="var-tag">hash-map</a>
<a href="clojure.core-api.html#clojure.core/hash-ordered-coll" id="var-tag">hash-ordered-coll</a>
<a href="clojure.core-api.html#clojure.core/hash-set" id="var-tag">hash-set</a>
<a href="clojure.core-api.html#clojure.core/hash-unordered-coll" id="var-tag">hash-unordered-coll</a>
<a href="clojure.core-api.html#clojure.core/identical?" id="var-tag">identical?</a>
<a href="clojure.core-api.html#clojure.core/identity" id="var-tag">identity</a>
<a href="clojure.core-api.html#clojure.core/if" id="var-tag">if</a>
<a href="clojure.core-api.html#clojure.core/if-let" id="var-tag">if-let</a>
<a href="clojure.core-api.html#clojure.core/if-not" id="var-tag">if-not</a>
<a href="clojure.core-api.html#clojure.core/if-some" id="var-tag">if-some</a>
<a href="clojure.core-api.html#clojure.core/ifn?" id="var-tag">ifn?</a>
<a href="clojure.core-api.html#clojure.core/import" id="var-tag">import</a>
<a href="clojure.core-api.html#clojure.core/in-ns" id="var-tag">in-ns</a>
<a href="clojure.core-api.html#clojure.core/inc" id="var-tag">inc</a>
<a href="clojure.core-api.html#clojure.core/inc'" id="var-tag">inc'</a>
<a href="clojure.core-api.html#clojure.core/init-proxy" id="var-tag">init-proxy</a>
<a href="clojure.core-api.html#clojure.core/instance?" id="var-tag">instance?</a>
<a href="clojure.core-api.html#clojure.core/int" id="var-tag">int</a>
<a href="clojure.core-api.html#clojure.core/int-array" id="var-tag">int-array</a>
<a href="clojure.core-api.html#clojure.core/integer?" id="var-tag">integer?</a>
<a href="clojure.core-api.html#clojure.core/interleave" id="var-tag">interleave</a>
<a href="clojure.core-api.html#clojure.core/intern" id="var-tag">intern</a>
<a href="clojure.core-api.html#clojure.core/interpose" id="var-tag">interpose</a>
<a href="clojure.core-api.html#clojure.core/into" id="var-tag">into</a>
<a href="clojure.core-api.html#clojure.core/into-array" id="var-tag">into-array</a>
<a href="clojure.core-api.html#clojure.core/ints" id="var-tag">ints</a>
<a href="clojure.core-api.html#clojure.core/io!" id="var-tag">io!</a>
<a href="clojure.core-api.html#clojure.core/isa?" id="var-tag">isa?</a>
<a href="clojure.core-api.html#clojure.core/iterate" id="var-tag">iterate</a>
<a href="clojure.core-api.html#clojure.core/iterator-seq" id="var-tag">iterator-seq</a>
<a href="clojure.core-api.html#clojure.core/juxt" id="var-tag">juxt</a>
<a href="clojure.core-api.html#clojure.core/keep" id="var-tag">keep</a>
<a href="clojure.core-api.html#clojure.core/keep-indexed" id="var-tag">keep-indexed</a>
<a href="clojure.core-api.html#clojure.core/key" id="var-tag">key</a>
<a href="clojure.core-api.html#clojure.core/keys" id="var-tag">keys</a>
<a href="clojure.core-api.html#clojure.core/keyword" id="var-tag">keyword</a>
<a href="clojure.core-api.html#clojure.core/keyword?" id="var-tag">keyword?</a>
<a href="clojure.core-api.html#clojure.core/last" id="var-tag">last</a>
<a href="clojure.core-api.html#clojure.core/lazy-cat" id="var-tag">lazy-cat</a>
<a href="clojure.core-api.html#clojure.core/lazy-seq" id="var-tag">lazy-seq</a>
<a href="clojure.core-api.html#clojure.core/let" id="var-tag">let</a>
<a href="clojure.core-api.html#clojure.core/letfn" id="var-tag">letfn</a>
<a href="clojure.core-api.html#clojure.core/line-seq" id="var-tag">line-seq</a>
<a href="clojure.core-api.html#clojure.core/list" id="var-tag">list</a>
<a href="clojure.core-api.html#clojure.core/list*" id="var-tag">list*</a>
<a href="clojure.core-api.html#clojure.core/list?" id="var-tag">list?</a>
<a href="clojure.core-api.html#clojure.core/load" id="var-tag">load</a>
<a href="clojure.core-api.html#clojure.core/load-file" id="var-tag">load-file</a>
<a href="clojure.core-api.html#clojure.core/load-reader" id="var-tag">load-reader</a>
<a href="clojure.core-api.html#clojure.core/load-string" id="var-tag">load-string</a>
<a href="clojure.core-api.html#clojure.core/loaded-libs" id="var-tag">loaded-libs</a>
<a href="clojure.core-api.html#clojure.core/locking" id="var-tag">locking</a>
<a href="clojure.core-api.html#clojure.core/long" id="var-tag">long</a>
<a href="clojure.core-api.html#clojure.core/long-array" id="var-tag">long-array</a>
<a href="clojure.core-api.html#clojure.core/longs" id="var-tag">longs</a>
<a href="clojure.core-api.html#clojure.core/loop" id="var-tag">loop</a>
<a href="clojure.core-api.html#clojure.core/macroexpand" id="var-tag">macroexpand</a>
<a href="clojure.core-api.html#clojure.core/macroexpand-1" id="var-tag">macroexpand-1</a>
<a href="clojure.core-api.html#clojure.core/make-array" id="var-tag">make-array</a>
<a href="clojure.core-api.html#clojure.core/make-hierarchy" id="var-tag">make-hierarchy</a>
<a href="clojure.core-api.html#clojure.core/map" id="var-tag">map</a>
<a href="clojure.core-api.html#clojure.core/map-indexed" id="var-tag">map-indexed</a>
<a href="clojure.core-api.html#clojure.core/map?" id="var-tag">map?</a>
<a href="clojure.core-api.html#clojure.core/mapcat" id="var-tag">mapcat</a>
<a href="clojure.core-api.html#clojure.core/mapv" id="var-tag">mapv</a>
<a href="clojure.core-api.html#clojure.core/max" id="var-tag">max</a>
<a href="clojure.core-api.html#clojure.core/max-key" id="var-tag">max-key</a>
<a href="clojure.core-api.html#clojure.core/memfn" id="var-tag">memfn</a>
<a href="clojure.core-api.html#clojure.core/memoize" id="var-tag">memoize</a>
<a href="clojure.core-api.html#clojure.core/merge" id="var-tag">merge</a>
<a href="clojure.core-api.html#clojure.core/merge-with" id="var-tag">merge-with</a>
<a href="clojure.core-api.html#clojure.core/meta" id="var-tag">meta</a>
<a href="clojure.core-api.html#clojure.core/methods" id="var-tag">methods</a>
<a href="clojure.core-api.html#clojure.core/min" id="var-tag">min</a>
<a href="clojure.core-api.html#clojure.core/min-key" id="var-tag">min-key</a>
<a href="clojure.core-api.html#clojure.core/mix-collection-hash" id="var-tag">mix-collection-hash</a>
<a href="clojure.core-api.html#clojure.core/mod" id="var-tag">mod</a>
<a href="clojure.core-api.html#clojure.core/monitor-enter" id="var-tag">monitor-enter</a>
<a href="clojure.core-api.html#clojure.core/monitor-exit" id="var-tag">monitor-exit</a>
<a href="clojure.core-api.html#clojure.core/name" id="var-tag">name</a>
<a href="clojure.core-api.html#clojure.core/namespace" id="var-tag">namespace</a>
<a href="clojure.core-api.html#clojure.core/namespace-munge" id="var-tag">namespace-munge</a>
<a href="clojure.core-api.html#clojure.core/neg?" id="var-tag">neg?</a>
<a href="clojure.core-api.html#clojure.core/new" id="var-tag">new</a>
<a href="clojure.core-api.html#clojure.core/newline" id="var-tag">newline</a>
<a href="clojure.core-api.html#clojure.core/next" id="var-tag">next</a>
<a href="clojure.core-api.html#clojure.core/nfirst" id="var-tag">nfirst</a>
<a href="clojure.core-api.html#clojure.core/nil?" id="var-tag">nil?</a>
<a href="clojure.core-api.html#clojure.core/nnext" id="var-tag">nnext</a>
<a href="clojure.core-api.html#clojure.core/not" id="var-tag">not</a>
<a href="clojure.core-api.html#clojure.core/not-any?" id="var-tag">not-any?</a>
<a href="clojure.core-api.html#clojure.core/not-empty" id="var-tag">not-empty</a>
<a href="clojure.core-api.html#clojure.core/not-every?" id="var-tag">not-every?</a>
<a href="clojure.core-api.html#clojure.core/not=" id="var-tag">not=</a>
<a href="clojure.core-api.html#clojure.core/ns" id="var-tag">ns</a>
<a href="clojure.core-api.html#clojure.core/ns-aliases" id="var-tag">ns-aliases</a>
<a href="clojure.core-api.html#clojure.core/ns-imports" id="var-tag">ns-imports</a>
<a href="clojure.core-api.html#clojure.core/ns-interns" id="var-tag">ns-interns</a>
<a href="clojure.core-api.html#clojure.core/ns-map" id="var-tag">ns-map</a>
<a href="clojure.core-api.html#clojure.core/ns-name" id="var-tag">ns-name</a>
<a href="clojure.core-api.html#clojure.core/ns-publics" id="var-tag">ns-publics</a>
<a href="clojure.core-api.html#clojure.core/ns-refers" id="var-tag">ns-refers</a>
<a href="clojure.core-api.html#clojure.core/ns-resolve" id="var-tag">ns-resolve</a>
<a href="clojure.core-api.html#clojure.core/ns-unalias" id="var-tag">ns-unalias</a>
<a href="clojure.core-api.html#clojure.core/ns-unmap" id="var-tag">ns-unmap</a>
<a href="clojure.core-api.html#clojure.core/nth" id="var-tag">nth</a>
<a href="clojure.core-api.html#clojure.core/nthnext" id="var-tag">nthnext</a>
<a href="clojure.core-api.html#clojure.core/nthrest" id="var-tag">nthrest</a>
<a href="clojure.core-api.html#clojure.core/num" id="var-tag">num</a>
<a href="clojure.core-api.html#clojure.core/number?" id="var-tag">number?</a>
<a href="clojure.core-api.html#clojure.core/numerator" id="var-tag">numerator</a>
<a href="clojure.core-api.html#clojure.core/object-array" id="var-tag">object-array</a>
<a href="clojure.core-api.html#clojure.core/odd?" id="var-tag">odd?</a>
<a href="clojure.core-api.html#clojure.core/or" id="var-tag">or</a>
<a href="clojure.core-api.html#clojure.core/parents" id="var-tag">parents</a>
<a href="clojure.core-api.html#clojure.core/partial" id="var-tag">partial</a>
<a href="clojure.core-api.html#clojure.core/partition" id="var-tag">partition</a>
<a href="clojure.core-api.html#clojure.core/partition-all" id="var-tag">partition-all</a>
<a href="clojure.core-api.html#clojure.core/partition-by" id="var-tag">partition-by</a>
<a href="clojure.core-api.html#clojure.core/pcalls" id="var-tag">pcalls</a>
<a href="clojure.core-api.html#clojure.core/peek" id="var-tag">peek</a>
<a href="clojure.core-api.html#clojure.core/persistent!" id="var-tag">persistent!</a>
<a href="clojure.core-api.html#clojure.core/pmap" id="var-tag">pmap</a>
<a href="clojure.core-api.html#clojure.core/pop" id="var-tag">pop</a>
<a href="clojure.core-api.html#clojure.core/pop!" id="var-tag">pop!</a>
<a href="clojure.core-api.html#clojure.core/pop-thread-bindings" id="var-tag">pop-thread-bindings</a>
<a href="clojure.core-api.html#clojure.core/pos?" id="var-tag">pos?</a>
<a href="clojure.core-api.html#clojure.core/pr" id="var-tag">pr</a>
<a href="clojure.core-api.html#clojure.core/pr-str" id="var-tag">pr-str</a>
<a href="clojure.core-api.html#clojure.core/prefer-method" id="var-tag">prefer-method</a>
<a href="clojure.core-api.html#clojure.core/prefers" id="var-tag">prefers</a>
<a href="clojure.core-api.html#clojure.core/print" id="var-tag">print</a>
<a href="clojure.core-api.html#clojure.core/print-str" id="var-tag">print-str</a>
<a href="clojure.core-api.html#clojure.core/printf" id="var-tag">printf</a>
<a href="clojure.core-api.html#clojure.core/println" id="var-tag">println</a>
<a href="clojure.core-api.html#clojure.core/println-str" id="var-tag">println-str</a>
<a href="clojure.core-api.html#clojure.core/prn" id="var-tag">prn</a>
<a href="clojure.core-api.html#clojure.core/prn-str" id="var-tag">prn-str</a>
<a href="clojure.core-api.html#clojure.core/promise" id="var-tag">promise</a>
<a href="clojure.core-api.html#clojure.core/proxy" id="var-tag">proxy</a>
<a href="clojure.core-api.html#clojure.core/proxy-mappings" id="var-tag">proxy-mappings</a>
<a href="clojure.core-api.html#clojure.core/proxy-super" id="var-tag">proxy-super</a>
<a href="clojure.core-api.html#clojure.core/push-thread-bindings" id="var-tag">push-thread-bindings</a>
<a href="clojure.core-api.html#clojure.core/pvalues" id="var-tag">pvalues</a>
<a href="clojure.core-api.html#clojure.core/quot" id="var-tag">quot</a>
<a href="clojure.core-api.html#clojure.core/quote" id="var-tag">quote</a>
<a href="clojure.core-api.html#clojure.core/rand" id="var-tag">rand</a>
<a href="clojure.core-api.html#clojure.core/rand-int" id="var-tag">rand-int</a>
<a href="clojure.core-api.html#clojure.core/rand-nth" id="var-tag">rand-nth</a>
<a href="clojure.core-api.html#clojure.core/range" id="var-tag">range</a>
<a href="clojure.core-api.html#clojure.core/ratio?" id="var-tag">ratio?</a>
<a href="clojure.core-api.html#clojure.core/rational?" id="var-tag">rational?</a>
<a href="clojure.core-api.html#clojure.core/rationalize" id="var-tag">rationalize</a>
<a href="clojure.core-api.html#clojure.core/re-find" id="var-tag">re-find</a>
<a href="clojure.core-api.html#clojure.core/re-groups" id="var-tag">re-groups</a>
<a href="clojure.core-api.html#clojure.core/re-matcher" id="var-tag">re-matcher</a>
<a href="clojure.core-api.html#clojure.core/re-matches" id="var-tag">re-matches</a>
<a href="clojure.core-api.html#clojure.core/re-pattern" id="var-tag">re-pattern</a>
<a href="clojure.core-api.html#clojure.core/re-seq" id="var-tag">re-seq</a>
<a href="clojure.core-api.html#clojure.core/read" id="var-tag">read</a>
<a href="clojure.core-api.html#clojure.core/read-line" id="var-tag">read-line</a>
<a href="clojure.core-api.html#clojure.core/read-string" id="var-tag">read-string</a>
<a href="clojure.core-api.html#clojure.core/realized?" id="var-tag">realized?</a>
<a href="clojure.core-api.html#clojure.core/record?" id="var-tag">record?</a>
<a href="clojure.core-api.html#clojure.core/recur" id="var-tag">recur</a>
<a href="clojure.core-api.html#clojure.core/reduce" id="var-tag">reduce</a>
<a href="clojure.core-api.html#clojure.core/reduce-kv" id="var-tag">reduce-kv</a>
<a href="clojure.core-api.html#clojure.core/reduced" id="var-tag">reduced</a>
<a href="clojure.core-api.html#clojure.core/reduced?" id="var-tag">reduced?</a>
<a href="clojure.core-api.html#clojure.core/reductions" id="var-tag">reductions</a>
<a href="clojure.core-api.html#clojure.core/ref" id="var-tag">ref</a>
<a href="clojure.core-api.html#clojure.core/ref-history-count" id="var-tag">ref-history-count</a>
<a href="clojure.core-api.html#clojure.core/ref-max-history" id="var-tag">ref-max-history</a>
<a href="clojure.core-api.html#clojure.core/ref-min-history" id="var-tag">ref-min-history</a>
<a href="clojure.core-api.html#clojure.core/ref-set" id="var-tag">ref-set</a>
<a href="clojure.core-api.html#clojure.core/refer" id="var-tag">refer</a>
<a href="clojure.core-api.html#clojure.core/refer-clojure" id="var-tag">refer-clojure</a>
<a href="clojure.core-api.html#clojure.core/reify" id="var-tag">reify</a>
<a href="clojure.core-api.html#clojure.core/release-pending-sends" id="var-tag">release-pending-sends</a>
<a href="clojure.core-api.html#clojure.core/rem" id="var-tag">rem</a>
<a href="clojure.core-api.html#clojure.core/remove" id="var-tag">remove</a>
<a href="clojure.core-api.html#clojure.core/remove-all-methods" id="var-tag">remove-all-methods</a>
<a href="clojure.core-api.html#clojure.core/remove-method" id="var-tag">remove-method</a>
<a href="clojure.core-api.html#clojure.core/remove-ns" id="var-tag">remove-ns</a>
<a href="clojure.core-api.html#clojure.core/remove-watch" id="var-tag">remove-watch</a>
<a href="clojure.core-api.html#clojure.core/repeat" id="var-tag">repeat</a>
<a href="clojure.core-api.html#clojure.core/repeatedly" id="var-tag">repeatedly</a>
<a href="clojure.core-api.html#clojure.core/replace" id="var-tag">replace</a>
<a href="clojure.core-api.html#clojure.core/replicate" id="var-tag">replicate</a>
<a href="clojure.core-api.html#clojure.core/require" id="var-tag">require</a>
<a href="clojure.core-api.html#clojure.core/reset!" id="var-tag">reset!</a>
<a href="clojure.core-api.html#clojure.core/reset-meta!" id="var-tag">reset-meta!</a>
<a href="clojure.core-api.html#clojure.core/resolve" id="var-tag">resolve</a>
<a href="clojure.core-api.html#clojure.core/rest" id="var-tag">rest</a>
<a href="clojure.core-api.html#clojure.core/restart-agent" id="var-tag">restart-agent</a>
<a href="clojure.core-api.html#clojure.core/resultset-seq" id="var-tag">resultset-seq</a>
<a href="clojure.core-api.html#clojure.core/reverse" id="var-tag">reverse</a>
<a href="clojure.core-api.html#clojure.core/reversible?" id="var-tag">reversible?</a>
<a href="clojure.core-api.html#clojure.core/rseq" id="var-tag">rseq</a>
<a href="clojure.core-api.html#clojure.core/rsubseq" id="var-tag">rsubseq</a>
<a href="clojure.core-api.html#clojure.core/satisfies?" id="var-tag">satisfies?</a>
<a href="clojure.core-api.html#clojure.core/second" id="var-tag">second</a>
<a href="clojure.core-api.html#clojure.core/select-keys" id="var-tag">select-keys</a>
<a href="clojure.core-api.html#clojure.core/send" id="var-tag">send</a>
<a href="clojure.core-api.html#clojure.core/send-off" id="var-tag">send-off</a>
<a href="clojure.core-api.html#clojure.core/send-via" id="var-tag">send-via</a>
<a href="clojure.core-api.html#clojure.core/seq" id="var-tag">seq</a>
<a href="clojure.core-api.html#clojure.core/seq?" id="var-tag">seq?</a>
<a href="clojure.core-api.html#clojure.core/seque" id="var-tag">seque</a>
<a href="clojure.core-api.html#clojure.core/sequence" id="var-tag">sequence</a>
<a href="clojure.core-api.html#clojure.core/sequential?" id="var-tag">sequential?</a>
<a href="clojure.core-api.html#clojure.core/set" id="var-tag">set</a>
<a href="clojure.core-api.html#clojure.core/set!" id="var-tag">set!</a>
<a href="clojure.core-api.html#clojure.core/set-agent-send-executor!" id="var-tag">set-agent-send-executor!</a>
<a href="clojure.core-api.html#clojure.core/set-agent-send-off-executor!" id="var-tag">set-agent-send-off-executor!</a>
<a href="clojure.core-api.html#clojure.core/set-error-handler!" id="var-tag">set-error-handler!</a>
<a href="clojure.core-api.html#clojure.core/set-error-mode!" id="var-tag">set-error-mode!</a>
<a href="clojure.core-api.html#clojure.core/set-validator!" id="var-tag">set-validator!</a>
<a href="clojure.core-api.html#clojure.core/set?" id="var-tag">set?</a>
<a href="clojure.core-api.html#clojure.core/short" id="var-tag">short</a>
<a href="clojure.core-api.html#clojure.core/short-array" id="var-tag">short-array</a>
<a href="clojure.core-api.html#clojure.core/shorts" id="var-tag">shorts</a>
<a href="clojure.core-api.html#clojure.core/shuffle" id="var-tag">shuffle</a>
<a href="clojure.core-api.html#clojure.core/shutdown-agents" id="var-tag">shutdown-agents</a>
<a href="clojure.core-api.html#clojure.core/slurp" id="var-tag">slurp</a>
<a href="clojure.core-api.html#clojure.core/some" id="var-tag">some</a>
<a href="clojure.core-api.html#clojure.core/some-&gt;" id="var-tag">some-&gt;</a>
<a href="clojure.core-api.html#clojure.core/some-&gt;&gt;" id="var-tag">some-&gt;&gt;</a>
<a href="clojure.core-api.html#clojure.core/some-fn" id="var-tag">some-fn</a>
<a href="clojure.core-api.html#clojure.core/some?" id="var-tag">some?</a>
<a href="clojure.core-api.html#clojure.core/sort" id="var-tag">sort</a>
<a href="clojure.core-api.html#clojure.core/sort-by" id="var-tag">sort-by</a>
<a href="clojure.core-api.html#clojure.core/sorted-map" id="var-tag">sorted-map</a>
<a href="clojure.core-api.html#clojure.core/sorted-map-by" id="var-tag">sorted-map-by</a>
<a href="clojure.core-api.html#clojure.core/sorted-set" id="var-tag">sorted-set</a>
<a href="clojure.core-api.html#clojure.core/sorted-set-by" id="var-tag">sorted-set-by</a>
<a href="clojure.core-api.html#clojure.core/sorted?" id="var-tag">sorted?</a>
<a href="clojure.core-api.html#clojure.core/special-symbol?" id="var-tag">special-symbol?</a>
<a href="clojure.core-api.html#clojure.core/spit" id="var-tag">spit</a>
<a href="clojure.core-api.html#clojure.core/split-at" id="var-tag">split-at</a>
<a href="clojure.core-api.html#clojure.core/split-with" id="var-tag">split-with</a>
<a href="clojure.core-api.html#clojure.core/str" id="var-tag">str</a>
<a href="clojure.core-api.html#clojure.core/string?" id="var-tag">string?</a>
<a href="clojure.core-api.html#clojure.core/struct" id="var-tag">struct</a>
<a href="clojure.core-api.html#clojure.core/struct-map" id="var-tag">struct-map</a>
<a href="clojure.core-api.html#clojure.core/subs" id="var-tag">subs</a>
<a href="clojure.core-api.html#clojure.core/subseq" id="var-tag">subseq</a>
<a href="clojure.core-api.html#clojure.core/subvec" id="var-tag">subvec</a>
<a href="clojure.core-api.html#clojure.core/supers" id="var-tag">supers</a>
<a href="clojure.core-api.html#clojure.core/swap!" id="var-tag">swap!</a>
<a href="clojure.core-api.html#clojure.core/symbol" id="var-tag">symbol</a>
<a href="clojure.core-api.html#clojure.core/symbol?" id="var-tag">symbol?</a>
<a href="clojure.core-api.html#clojure.core/sync" id="var-tag">sync</a>
<a href="clojure.core-api.html#clojure.core/take" id="var-tag">take</a>
<a href="clojure.core-api.html#clojure.core/take-last" id="var-tag">take-last</a>
<a href="clojure.core-api.html#clojure.core/take-nth" id="var-tag">take-nth</a>
<a href="clojure.core-api.html#clojure.core/take-while" id="var-tag">take-while</a>
<a href="clojure.core-api.html#clojure.core/test" id="var-tag">test</a>
<a href="clojure.core-api.html#clojure.core/the-ns" id="var-tag">the-ns</a>
<a href="clojure.core-api.html#clojure.core/thread-bound?" id="var-tag">thread-bound?</a>
<a href="clojure.core-api.html#clojure.core/throw" id="var-tag">throw</a>
<a href="clojure.core-api.html#clojure.core/time" id="var-tag">time</a>
<a href="clojure.core-api.html#clojure.core/to-array" id="var-tag">to-array</a>
<a href="clojure.core-api.html#clojure.core/to-array-2d" id="var-tag">to-array-2d</a>
<a href="clojure.core-api.html#clojure.core/trampoline" id="var-tag">trampoline</a>
<a href="clojure.core-api.html#clojure.core/transient" id="var-tag">transient</a>
<a href="clojure.core-api.html#clojure.core/tree-seq" id="var-tag">tree-seq</a>
<a href="clojure.core-api.html#clojure.core/true?" id="var-tag">true?</a>
<a href="clojure.core-api.html#clojure.core/try" id="var-tag">try</a>
<a href="clojure.core-api.html#clojure.core/type" id="var-tag">type</a>
<a href="clojure.core-api.html#clojure.core/unchecked-add" id="var-tag">unchecked-add</a>
<a href="clojure.core-api.html#clojure.core/unchecked-add-int" id="var-tag">unchecked-add-int</a>
<a href="clojure.core-api.html#clojure.core/unchecked-byte" id="var-tag">unchecked-byte</a>
<a href="clojure.core-api.html#clojure.core/unchecked-char" id="var-tag">unchecked-char</a>
<a href="clojure.core-api.html#clojure.core/unchecked-dec" id="var-tag">unchecked-dec</a>
<a href="clojure.core-api.html#clojure.core/unchecked-dec-int" id="var-tag">unchecked-dec-int</a>
<a href="clojure.core-api.html#clojure.core/unchecked-divide-int" id="var-tag">unchecked-divide-int</a>
<a href="clojure.core-api.html#clojure.core/unchecked-double" id="var-tag">unchecked-double</a>
<a href="clojure.core-api.html#clojure.core/unchecked-float" id="var-tag">unchecked-float</a>
<a href="clojure.core-api.html#clojure.core/unchecked-inc" id="var-tag">unchecked-inc</a>
<a href="clojure.core-api.html#clojure.core/unchecked-inc-int" id="var-tag">unchecked-inc-int</a>
<a href="clojure.core-api.html#clojure.core/unchecked-int" id="var-tag">unchecked-int</a>
<a href="clojure.core-api.html#clojure.core/unchecked-long" id="var-tag">unchecked-long</a>
<a href="clojure.core-api.html#clojure.core/unchecked-multiply" id="var-tag">unchecked-multiply</a>
<a href="clojure.core-api.html#clojure.core/unchecked-multiply-int" id="var-tag">unchecked-multiply-int</a>
<a href="clojure.core-api.html#clojure.core/unchecked-negate" id="var-tag">unchecked-negate</a>
<a href="clojure.core-api.html#clojure.core/unchecked-negate-int" id="var-tag">unchecked-negate-int</a>
<a href="clojure.core-api.html#clojure.core/unchecked-remainder-int" id="var-tag">unchecked-remainder-int</a>
<a href="clojure.core-api.html#clojure.core/unchecked-short" id="var-tag">unchecked-short</a>
<a href="clojure.core-api.html#clojure.core/unchecked-subtract" id="var-tag">unchecked-subtract</a>
<a href="clojure.core-api.html#clojure.core/unchecked-subtract-int" id="var-tag">unchecked-subtract-int</a>
<a href="clojure.core-api.html#clojure.core/underive" id="var-tag">underive</a>
<a href="clojure.core-api.html#clojure.core/unsigned-bit-shift-right" id="var-tag">unsigned-bit-shift-right</a>
<a href="clojure.core-api.html#clojure.core/update-in" id="var-tag">update-in</a>
<a href="clojure.core-api.html#clojure.core/update-proxy" id="var-tag">update-proxy</a>
<a href="clojure.core-api.html#clojure.core/use" id="var-tag">use</a>
<a href="clojure.core-api.html#clojure.core/val" id="var-tag">val</a>
<a href="clojure.core-api.html#clojure.core/vals" id="var-tag">vals</a>
<a href="clojure.core-api.html#clojure.core/var" id="var-tag">var</a>
<a href="clojure.core-api.html#clojure.core/var-get" id="var-tag">var-get</a>
<a href="clojure.core-api.html#clojure.core/var-set" id="var-tag">var-set</a>
<a href="clojure.core-api.html#clojure.core/var?" id="var-tag">var?</a>
<a href="clojure.core-api.html#clojure.core/vary-meta" id="var-tag">vary-meta</a>
<a href="clojure.core-api.html#clojure.core/vec" id="var-tag">vec</a>
<a href="clojure.core-api.html#clojure.core/Vec" id="var-tag">Vec</a>
<a href="clojure.core-api.html#clojure.core/VecNode" id="var-tag">VecNode</a>
<a href="clojure.core-api.html#clojure.core/VecSeq" id="var-tag">VecSeq</a>
<a href="clojure.core-api.html#clojure.core/vector" id="var-tag">vector</a>
<a href="clojure.core-api.html#clojure.core/vector-of" id="var-tag">vector-of</a>
<a href="clojure.core-api.html#clojure.core/vector?" id="var-tag">vector?</a>
<a href="clojure.core-api.html#clojure.core/when" id="var-tag">when</a>
<a href="clojure.core-api.html#clojure.core/when-first" id="var-tag">when-first</a>
<a href="clojure.core-api.html#clojure.core/when-let" id="var-tag">when-let</a>
<a href="clojure.core-api.html#clojure.core/when-not" id="var-tag">when-not</a>
<a href="clojure.core-api.html#clojure.core/when-some" id="var-tag">when-some</a>
<a href="clojure.core-api.html#clojure.core/while" id="var-tag">while</a>
<a href="clojure.core-api.html#clojure.core/with-bindings" id="var-tag">with-bindings</a>
<a href="clojure.core-api.html#clojure.core/with-bindings*" id="var-tag">with-bindings*</a>
<a href="clojure.core-api.html#clojure.core/with-in-str" id="var-tag">with-in-str</a>
<a href="clojure.core-api.html#clojure.core/with-local-vars" id="var-tag">with-local-vars</a>
<a href="clojure.core-api.html#clojure.core/with-meta" id="var-tag">with-meta</a>
<a href="clojure.core-api.html#clojure.core/with-open" id="var-tag">with-open</a>
<a href="clojure.core-api.html#clojure.core/with-out-str" id="var-tag">with-out-str</a>
<a href="clojure.core-api.html#clojure.core/with-precision" id="var-tag">with-precision</a>
<a href="clojure.core-api.html#clojure.core/with-redefs" id="var-tag">with-redefs</a>
<a href="clojure.core-api.html#clojure.core/with-redefs-fn" id="var-tag">with-redefs-fn</a>
<a href="clojure.core-api.html#clojure.core/xml-seq" id="var-tag">xml-seq</a>
<a href="clojure.core-api.html#clojure.core/zero?" id="var-tag">zero?</a>
<a href="clojure.core-api.html#clojure.core/zipmap" id="var-tag">zipmap</a><br />
    240:  Contents:  <a href="clojure.data-api.html#clojure.data/diff" id="var-tag">diff</a>
<a href="clojure.data-api.html#clojure.data/Diff" id="var-tag">Diff</a>
<a href="clojure.data-api.html#clojure.data/diff-similar" id="var-tag">diff-similar</a>
<a href="clojure.data-api.html#clojure.data/equality-partition" id="var-tag">equality-partition</a>
<a href="clojure.data-api.html#clojure.data/EqualityPartition" id="var-tag">EqualityPartition</a><br />
    252:  Contents:  <a href="clojure.edn-api.html#clojure.edn/read" id="var-tag">read</a>
<a href="clojure.edn-api.html#clojure.edn/read-string" id="var-tag">read-string</a><br />
    264:  Contents:  <a href="clojure.inspector-api.html#clojure.inspector/inspect" id="var-tag">inspect</a>
<a href="clojure.inspector-api.html#clojure.inspector/inspect-table" id="var-tag">inspect-table</a>
<a href="clojure.inspector-api.html#clojure.inspector/inspect-tree" id="var-tag">inspect-tree</a><br />
    276:  Contents:  <a href="clojure.instant-api.html#clojure.instant/parse-timestamp" id="var-tag">parse-timestamp</a>
<a href="clojure.instant-api.html#clojure.instant/read-instant-calendar" id="var-tag">read-instant-calendar</a>
<a href="clojure.instant-api.html#clojure.instant/read-instant-date" id="var-tag">read-instant-date</a>
<a href="clojure.instant-api.html#clojure.instant/read-instant-timestamp" id="var-tag">read-instant-timestamp</a>
<a href="clojure.instant-api.html#clojure.instant/validated" id="var-tag">validated</a><br />
    288:  Contents:  <a href="clojure.java.browse-api.html#clojure.java.browse/browse-url" id="var-tag">browse-url</a><br />
    300:  Contents:  <a href="clojure.java.io-api.html#clojure.java.io/as-file" id="var-tag">as-file</a>
<a href="clojure.java.io-api.html#clojure.java.io/as-relative-path" id="var-tag">as-relative-path</a>
<a href="clojure.java.io-api.html#clojure.java.io/as-url" id="var-tag">as-url</a>
<a href="clojure.java.io-api.html#clojure.java.io/Coercions" id="var-tag">Coercions</a>
<a href="clojure.java.io-api.html#clojure.java.io/copy" id="var-tag">copy</a>
<a href="clojure.java.io-api.html#clojure.java.io/delete-file" id="var-tag">delete-file</a>
<a href="clojure.java.io-api.html#clojure.java.io/file" id="var-tag">file</a>
<a href="clojure.java.io-api.html#clojure.java.io/input-stream" id="var-tag">input-stream</a>
<a href="clojure.java.io-api.html#clojure.java.io/IOFactory" id="var-tag">IOFactory</a>
<a href="clojure.java.io-api.html#clojure.java.io/make-input-stream" id="var-tag">make-input-stream</a>
<a href="clojure.java.io-api.html#clojure.java.io/make-output-stream" id="var-tag">make-output-stream</a>
<a href="clojure.java.io-api.html#clojure.java.io/make-parents" id="var-tag">make-parents</a>
<a href="clojure.java.io-api.html#clojure.java.io/make-reader" id="var-tag">make-reader</a>
<a href="clojure.java.io-api.html#clojure.java.io/make-writer" id="var-tag">make-writer</a>
<a href="clojure.java.io-api.html#clojure.java.io/output-stream" id="var-tag">output-stream</a>
<a href="clojure.java.io-api.html#clojure.java.io/reader" id="var-tag">reader</a>
<a href="clojure.java.io-api.html#clojure.java.io/resource" id="var-tag">resource</a>
<a href="clojure.java.io-api.html#clojure.java.io/writer" id="var-tag">writer</a><br />
    312:  Contents:  <a href="clojure.java.javadoc-api.html#clojure.java.javadoc/add-local-javadoc" id="var-tag">add-local-javadoc</a>
<a href="clojure.java.javadoc-api.html#clojure.java.javadoc/add-remote-javadoc" id="var-tag">add-remote-javadoc</a>
<a href="clojure.java.javadoc-api.html#clojure.java.javadoc/javadoc" id="var-tag">javadoc</a><br />
    324:  Contents:  <a href="clojure.java.shell-api.html#clojure.java.shell/sh" id="var-tag">sh</a>
<a href="clojure.java.shell-api.html#clojure.java.shell/with-sh-dir" id="var-tag">with-sh-dir</a>
<a href="clojure.java.shell-api.html#clojure.java.shell/with-sh-env" id="var-tag">with-sh-env</a><br />
    336:  Contents:  <a href="clojure.main-api.html#clojure.main/demunge" id="var-tag">demunge</a>
<a href="clojure.main-api.html#clojure.main/load-script" id="var-tag">load-script</a>
<a href="clojure.main-api.html#clojure.main/main" id="var-tag">main</a>
<a href="clojure.main-api.html#clojure.main/repl" id="var-tag">repl</a>
<a href="clojure.main-api.html#clojure.main/repl-caught" id="var-tag">repl-caught</a>
<a href="clojure.main-api.html#clojure.main/repl-exception" id="var-tag">repl-exception</a>
<a href="clojure.main-api.html#clojure.main/repl-prompt" id="var-tag">repl-prompt</a>
<a href="clojure.main-api.html#clojure.main/repl-read" id="var-tag">repl-read</a>
<a href="clojure.main-api.html#clojure.main/repl-requires" id="var-tag">repl-requires</a>
<a href="clojure.main-api.html#clojure.main/root-cause" id="var-tag">root-cause</a>
<a href="clojure.main-api.html#clojure.main/skip-if-eol" id="var-tag">skip-if-eol</a>
<a href="clojure.main-api.html#clojure.main/skip-whitespace" id="var-tag">skip-whitespace</a>
<a href="clojure.main-api.html#clojure.main/stack-element-str" id="var-tag">stack-element-str</a>
<a href="clojure.main-api.html#clojure.main/with-bindings" id="var-tag">with-bindings</a>
<a href="clojure.main-api.html#clojure.main/with-read-known" id="var-tag">with-read-known</a><br />
    367:  Contents:  <a href="clojure.pprint-api.html#clojure.pprint/*print-base*" id="var-tag">*print-base*</a>
<a href="clojure.pprint-api.html#clojure.pprint/*print-miser-width*" id="var-tag">*print-miser-width*</a>
<a href="clojure.pprint-api.html#clojure.pprint/*print-pprint-dispatch*" id="var-tag">*print-pprint-dispatch*</a>
<a href="clojure.pprint-api.html#clojure.pprint/*print-pretty*" id="var-tag">*print-pretty*</a>
<a href="clojure.pprint-api.html#clojure.pprint/*print-radix*" id="var-tag">*print-radix*</a>
<a href="clojure.pprint-api.html#clojure.pprint/*print-right-margin*" id="var-tag">*print-right-margin*</a>
<a href="clojure.pprint-api.html#clojure.pprint/*print-suppress-namespaces*" id="var-tag">*print-suppress-namespaces*</a>
<a href="clojure.pprint-api.html#clojure.pprint/cl-format" id="var-tag">cl-format</a>
<a href="clojure.pprint-api.html#clojure.pprint/code-dispatch" id="var-tag">code-dispatch</a>
<a href="clojure.pprint-api.html#clojure.pprint/formatter" id="var-tag">formatter</a>
<a href="clojure.pprint-api.html#clojure.pprint/formatter-out" id="var-tag">formatter-out</a>
<a href="clojure.pprint-api.html#clojure.pprint/fresh-line" id="var-tag">fresh-line</a>
<a href="clojure.pprint-api.html#clojure.pprint/get-pretty-writer" id="var-tag">get-pretty-writer</a>
<a href="clojure.pprint-api.html#clojure.pprint/pp" id="var-tag">pp</a>
<a href="clojure.pprint-api.html#clojure.pprint/pprint" id="var-tag">pprint</a>
<a href="clojure.pprint-api.html#clojure.pprint/pprint-indent" id="var-tag">pprint-indent</a>
<a href="clojure.pprint-api.html#clojure.pprint/pprint-logical-block" id="var-tag">pprint-logical-block</a>
<a href="clojure.pprint-api.html#clojure.pprint/pprint-newline" id="var-tag">pprint-newline</a>
<a href="clojure.pprint-api.html#clojure.pprint/pprint-tab" id="var-tag">pprint-tab</a>
<a href="clojure.pprint-api.html#clojure.pprint/print-length-loop" id="var-tag">print-length-loop</a>
<a href="clojure.pprint-api.html#clojure.pprint/print-table" id="var-tag">print-table</a>
<a href="clojure.pprint-api.html#clojure.pprint/set-pprint-dispatch" id="var-tag">set-pprint-dispatch</a>
<a href="clojure.pprint-api.html#clojure.pprint/simple-dispatch" id="var-tag">simple-dispatch</a>
<a href="clojure.pprint-api.html#clojure.pprint/with-pprint-dispatch" id="var-tag">with-pprint-dispatch</a>
<a href="clojure.pprint-api.html#clojure.pprint/write" id="var-tag">write</a>
<a href="clojure.pprint-api.html#clojure.pprint/write-out" id="var-tag">write-out</a><br />
    408:  Contents:  <a href="clojure.reflect-api.html#clojure.reflect/-&gt;AsmReflector" id="var-tag">-&gt;AsmReflector</a>
<a href="clojure.reflect-api.html#clojure.reflect/-&gt;Constructor" id="var-tag">-&gt;Constructor</a>
<a href="clojure.reflect-api.html#clojure.reflect/-&gt;Field" id="var-tag">-&gt;Field</a>
<a href="clojure.reflect-api.html#clojure.reflect/-&gt;JavaReflector" id="var-tag">-&gt;JavaReflector</a>
<a href="clojure.reflect-api.html#clojure.reflect/-&gt;Method" id="var-tag">-&gt;Method</a>
<a href="clojure.reflect-api.html#clojure.reflect/AsmReflector" id="var-tag">AsmReflector</a>
<a href="clojure.reflect-api.html#clojure.reflect/ClassResolver" id="var-tag">ClassResolver</a>
<a href="clojure.reflect-api.html#clojure.reflect/Constructor" id="var-tag">Constructor</a>
<a href="clojure.reflect-api.html#clojure.reflect/do-reflect" id="var-tag">do-reflect</a>
<a href="clojure.reflect-api.html#clojure.reflect/Field" id="var-tag">Field</a>
<a href="clojure.reflect-api.html#clojure.reflect/flag-descriptors" id="var-tag">flag-descriptors</a>
<a href="clojure.reflect-api.html#clojure.reflect/JavaReflector" id="var-tag">JavaReflector</a>
<a href="clojure.reflect-api.html#clojure.reflect/map-&gt;Constructor" id="var-tag">map-&gt;Constructor</a>
<a href="clojure.reflect-api.html#clojure.reflect/map-&gt;Field" id="var-tag">map-&gt;Field</a>
<a href="clojure.reflect-api.html#clojure.reflect/map-&gt;Method" id="var-tag">map-&gt;Method</a>
<a href="clojure.reflect-api.html#clojure.reflect/Method" id="var-tag">Method</a>
<a href="clojure.reflect-api.html#clojure.reflect/reflect" id="var-tag">reflect</a>
<a href="clojure.reflect-api.html#clojure.reflect/Reflector" id="var-tag">Reflector</a>
<a href="clojure.reflect-api.html#clojure.reflect/resolve-class" id="var-tag">resolve-class</a>
<a href="clojure.reflect-api.html#clojure.reflect/type-reflect" id="var-tag">type-reflect</a>
<a href="clojure.reflect-api.html#clojure.reflect/typename" id="var-tag">typename</a>
<a href="clojure.reflect-api.html#clojure.reflect/TypeReference" id="var-tag">TypeReference</a><br />
    420:  Contents:  <a href="clojure.repl-api.html#clojure.repl/apropos" id="var-tag">apropos</a>
<a href="clojure.repl-api.html#clojure.repl/demunge" id="var-tag">demunge</a>
<a href="clojure.repl-api.html#clojure.repl/dir" id="var-tag">dir</a>
<a href="clojure.repl-api.html#clojure.repl/dir-fn" id="var-tag">dir-fn</a>
<a href="clojure.repl-api.html#clojure.repl/doc" id="var-tag">doc</a>
<a href="clojure.repl-api.html#clojure.repl/find-doc" id="var-tag">find-doc</a>
<a href="clojure.repl-api.html#clojure.repl/pst" id="var-tag">pst</a>
<a href="clojure.repl-api.html#clojure.repl/root-cause" id="var-tag">root-cause</a>
<a href="clojure.repl-api.html#clojure.repl/set-break-handler!" id="var-tag">set-break-handler!</a>
<a href="clojure.repl-api.html#clojure.repl/source" id="var-tag">source</a>
<a href="clojure.repl-api.html#clojure.repl/source-fn" id="var-tag">source-fn</a>
<a href="clojure.repl-api.html#clojure.repl/stack-element-str" id="var-tag">stack-element-str</a>
<a href="clojure.repl-api.html#clojure.repl/thread-stopper" id="var-tag">thread-stopper</a><br />
    432:  Contents:  <a href="clojure.set-api.html#clojure.set/difference" id="var-tag">difference</a>
<a href="clojure.set-api.html#clojure.set/index" id="var-tag">index</a>
<a href="clojure.set-api.html#clojure.set/intersection" id="var-tag">intersection</a>
<a href="clojure.set-api.html#clojure.set/join" id="var-tag">join</a>
<a href="clojure.set-api.html#clojure.set/map-invert" id="var-tag">map-invert</a>
<a href="clojure.set-api.html#clojure.set/project" id="var-tag">project</a>
<a href="clojure.set-api.html#clojure.set/rename" id="var-tag">rename</a>
<a href="clojure.set-api.html#clojure.set/rename-keys" id="var-tag">rename-keys</a>
<a href="clojure.set-api.html#clojure.set/select" id="var-tag">select</a>
<a href="clojure.set-api.html#clojure.set/subset?" id="var-tag">subset?</a>
<a href="clojure.set-api.html#clojure.set/superset?" id="var-tag">superset?</a>
<a href="clojure.set-api.html#clojure.set/union" id="var-tag">union</a><br />
    444:  Contents:  <a href="clojure.stacktrace-api.html#clojure.stacktrace/e" id="var-tag">e</a>
<a href="clojure.stacktrace-api.html#clojure.stacktrace/print-cause-trace" id="var-tag">print-cause-trace</a>
<a href="clojure.stacktrace-api.html#clojure.stacktrace/print-stack-trace" id="var-tag">print-stack-trace</a>
<a href="clojure.stacktrace-api.html#clojure.stacktrace/print-throwable" id="var-tag">print-throwable</a>
<a href="clojure.stacktrace-api.html#clojure.stacktrace/print-trace-element" id="var-tag">print-trace-element</a>
<a href="clojure.stacktrace-api.html#clojure.stacktrace/root-cause" id="var-tag">root-cause</a><br />
    456:  Contents:  <a href="clojure.string-api.html#clojure.string/blank?" id="var-tag">blank?</a>
<a href="clojure.string-api.html#clojure.string/capitalize" id="var-tag">capitalize</a>
<a href="clojure.string-api.html#clojure.string/escape" id="var-tag">escape</a>
<a href="clojure.string-api.html#clojure.string/join" id="var-tag">join</a>
<a href="clojure.string-api.html#clojure.string/lower-case" id="var-tag">lower-case</a>
<a href="clojure.string-api.html#clojure.string/re-quote-replacement" id="var-tag">re-quote-replacement</a>
<a href="clojure.string-api.html#clojure.string/replace" id="var-tag">replace</a>
<a href="clojure.string-api.html#clojure.string/replace-first" id="var-tag">replace-first</a>
<a href="clojure.string-api.html#clojure.string/reverse" id="var-tag">reverse</a>
<a href="clojure.string-api.html#clojure.string/split" id="var-tag">split</a>
<a href="clojure.string-api.html#clojure.string/split-lines" id="var-tag">split-lines</a>
<a href="clojure.string-api.html#clojure.string/trim" id="var-tag">trim</a>
<a href="clojure.string-api.html#clojure.string/trim-newline" id="var-tag">trim-newline</a>
<a href="clojure.string-api.html#clojure.string/triml" id="var-tag">triml</a>
<a href="clojure.string-api.html#clojure.string/trimr" id="var-tag">trimr</a>
<a href="clojure.string-api.html#clojure.string/upper-case" id="var-tag">upper-case</a><br />
    468:  Contents:  <a href="clojure.template-api.html#clojure.template/apply-template" id="var-tag">apply-template</a>
<a href="clojure.template-api.html#clojure.template/do-template" id="var-tag">do-template</a><br />
    693:  Contents:  <a href="clojure.test-api.html#clojure.test/*load-tests*" id="var-tag">*load-tests*</a>
<a href="clojure.test-api.html#clojure.test/*stack-trace-depth*" id="var-tag">*stack-trace-depth*</a>
<a href="clojure.test-api.html#clojure.test/are" id="var-tag">are</a>
<a href="clojure.test-api.html#clojure.test/assert-any" id="var-tag">assert-any</a>
<a href="clojure.test-api.html#clojure.test/assert-predicate" id="var-tag">assert-predicate</a>
<a href="clojure.test-api.html#clojure.test/compose-fixtures" id="var-tag">compose-fixtures</a>
<a href="clojure.test-api.html#clojure.test/deftest" id="var-tag">deftest</a>
<a href="clojure.test-api.html#clojure.test/deftest-" id="var-tag">deftest-</a>
<a href="clojure.test-api.html#clojure.test/do-report" id="var-tag">do-report</a>
<a href="clojure.test-api.html#clojure.test/file-position" id="var-tag">file-position</a>
<a href="clojure.test-api.html#clojure.test/function?" id="var-tag">function?</a>
<a href="clojure.test-api.html#clojure.test/get-possibly-unbound-var" id="var-tag">get-possibly-unbound-var</a>
<a href="clojure.test-api.html#clojure.test/inc-report-counter" id="var-tag">inc-report-counter</a>
<a href="clojure.test-api.html#clojure.test/is" id="var-tag">is</a>
<a href="clojure.test-api.html#clojure.test/join-fixtures" id="var-tag">join-fixtures</a>
<a href="clojure.test-api.html#clojure.test/report" id="var-tag">report</a>
<a href="clojure.test-api.html#clojure.test/run-all-tests" id="var-tag">run-all-tests</a>
<a href="clojure.test-api.html#clojure.test/run-tests" id="var-tag">run-tests</a>
<a href="clojure.test-api.html#clojure.test/set-test" id="var-tag">set-test</a>
<a href="clojure.test-api.html#clojure.test/successful?" id="var-tag">successful?</a>
<a href="clojure.test-api.html#clojure.test/test-all-vars" id="var-tag">test-all-vars</a>
<a href="clojure.test-api.html#clojure.test/test-ns" id="var-tag">test-ns</a>
<a href="clojure.test-api.html#clojure.test/test-var" id="var-tag">test-var</a>
<a href="clojure.test-api.html#clojure.test/test-vars" id="var-tag">test-vars</a>
<a href="clojure.test-api.html#clojure.test/testing" id="var-tag">testing</a>
<a href="clojure.test-api.html#clojure.test/testing-contexts-str" id="var-tag">testing-contexts-str</a>
<a href="clojure.test-api.html#clojure.test/testing-vars-str" id="var-tag">testing-vars-str</a>
<a href="clojure.test-api.html#clojure.test/try-expr" id="var-tag">try-expr</a>
<a href="clojure.test-api.html#clojure.test/use-fixtures" id="var-tag">use-fixtures</a>
<a href="clojure.test-api.html#clojure.test/with-test" id="var-tag">with-test</a>
<a href="clojure.test-api.html#clojure.test/with-test-out" id="var-tag">with-test-out</a><br />
    725:  Contents:  <a href="clojure.walk-api.html#clojure.walk/keywordize-keys" id="var-tag">keywordize-keys</a>
<a href="clojure.walk-api.html#clojure.walk/macroexpand-all" id="var-tag">macroexpand-all</a>
<a href="clojure.walk-api.html#clojure.walk/postwalk" id="var-tag">postwalk</a>
<a href="clojure.walk-api.html#clojure.walk/postwalk-demo" id="var-tag">postwalk-demo</a>
<a href="clojure.walk-api.html#clojure.walk/postwalk-replace" id="var-tag">postwalk-replace</a>
<a href="clojure.walk-api.html#clojure.walk/prewalk" id="var-tag">prewalk</a>
<a href="clojure.walk-api.html#clojure.walk/prewalk-demo" id="var-tag">prewalk-demo</a>
<a href="clojure.walk-api.html#clojure.walk/prewalk-replace" id="var-tag">prewalk-replace</a>
<a href="clojure.walk-api.html#clojure.walk/stringify-keys" id="var-tag">stringify-keys</a>
<a href="clojure.walk-api.html#clojure.walk/walk" id="var-tag">walk</a><br />
    737:  Contents:  <a href="clojure.xml-api.html#clojure.xml/parse" id="var-tag">parse</a><br />
    750:  Contents:  <a href="clojure.zip-api.html#clojure.zip/append-child" id="var-tag">append-child</a>
<a href="clojure.zip-api.html#clojure.zip/branch?" id="var-tag">branch?</a>
<a href="clojure.zip-api.html#clojure.zip/children" id="var-tag">children</a>
<a href="clojure.zip-api.html#clojure.zip/down" id="var-tag">down</a>
<a href="clojure.zip-api.html#clojure.zip/edit" id="var-tag">edit</a>
<a href="clojure.zip-api.html#clojure.zip/end?" id="var-tag">end?</a>
<a href="clojure.zip-api.html#clojure.zip/insert-child" id="var-tag">insert-child</a>
<a href="clojure.zip-api.html#clojure.zip/insert-left" id="var-tag">insert-left</a>
<a href="clojure.zip-api.html#clojure.zip/insert-right" id="var-tag">insert-right</a>
<a href="clojure.zip-api.html#clojure.zip/left" id="var-tag">left</a>
<a href="clojure.zip-api.html#clojure.zip/leftmost" id="var-tag">leftmost</a>
<a href="clojure.zip-api.html#clojure.zip/lefts" id="var-tag">lefts</a>
<a href="clojure.zip-api.html#clojure.zip/make-node" id="var-tag">make-node</a>
<a href="clojure.zip-api.html#clojure.zip/next" id="var-tag">next</a>
<a href="clojure.zip-api.html#clojure.zip/node" id="var-tag">node</a>
<a href="clojure.zip-api.html#clojure.zip/path" id="var-tag">path</a>
<a href="clojure.zip-api.html#clojure.zip/prev" id="var-tag">prev</a>
<a href="clojure.zip-api.html#clojure.zip/remove" id="var-tag">remove</a>
<a href="clojure.zip-api.html#clojure.zip/replace" id="var-tag">replace</a>
<a href="clojure.zip-api.html#clojure.zip/right" id="var-tag">right</a>
<a href="clojure.zip-api.html#clojure.zip/rightmost" id="var-tag">rightmost</a>
<a href="clojure.zip-api.html#clojure.zip/rights" id="var-tag">rights</a>
<a href="clojure.zip-api.html#clojure.zip/root" id="var-tag">root</a>
<a href="clojure.zip-api.html#clojure.zip/seq-zip" id="var-tag">seq-zip</a>
<a href="clojure.zip-api.html#clojure.zip/up" id="var-tag">up</a>
<a href="clojure.zip-api.html#clojure.zip/vector-zip" id="var-tag">vector-zip</a>
<a href="clojure.zip-api.html#clojure.zip/xml-zip" id="var-tag">xml-zip</a>
<a href="clojure.zip-api.html#clojure.zip/zipper" id="var-tag">zipper</a><br />
